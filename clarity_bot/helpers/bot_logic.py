import os
import json
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from openai import OpenAI

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ DeepSeek
client = OpenAI(
    api_key=os.getenv("DEEPSEEK_API_KEY"),
    base_url="https://api.deepseek.com/v1"
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º–ø—Ç–∞
with open("prompts/spirit_prompt.txt", encoding="utf-8") as f:
    PROMPT = f.read()

# –ó–∞–≥—Ä—É–∑–∫–∞ FAQ
with open("data/faq.json", encoding="utf-8") as f:
    FAQ_LIST = json.load(f)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}
user_data = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
MENU = [["üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "üìñ –û –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö"], ["üåø –°–æ–≤–µ—Ç –¥—É—Ö–∞", "‚ùì FAQ", "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã"]]

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¶–µ–Ω—Ç—Ä ¬´–Ø—Å–Ω–æ—Å—Ç—å¬ª üåø\n\n"
        "–≠—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑—å —Å —Å–æ–±–æ–π. "
        "–Ø ‚Äî –¥—É—Ö-–ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?",
        reply_markup=ReplyKeyboardMarkup(MENU, resize_keyboard=True)
    )

async def handle_user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    msg = update.message.text.strip()

    # –ó–∞–ø–∏—Å—å
    if user_id in user_states:
        state = user_states[user_id]
        if state == "awaiting_name":
            user_data[user_id] = {"name": msg}
            user_states[user_id] = "awaiting_contact"
            await update.message.reply_text("–ö–∞–∫ —Å —Ç–æ–±–æ–π —Å–≤—è–∑–∞—Ç—å—Å—è? –¢–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ @—é–∑–µ—Ä–Ω–µ–π–º.")
            return
        elif state == "awaiting_contact":
            name = user_data[user_id]["name"]
            contact = msg
            await update.message.reply_text("–°–ø–∞—Å–∏–±–æ, —è –ø–µ—Ä–µ–¥–∞–º —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å ‚ú® –ú—ã —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è.")
            await context.bot.send_message(chat_id=int(os.getenv("ADMIN_CHAT_ID")), text=f"üì© –ó–∞—è–≤–∫–∞ –Ω–∞ —Å–µ—Å—Å–∏—é:\n–ò–º—è: {name}\n–ö–æ–Ω—Ç–∞–∫—Ç: {contact}")
            del user_states[user_id]
            del user_data[user_id]
            return

    # –ö–æ–º–∞–Ω–¥—ã
    text = msg.lower()
    if "–∑–∞–ø–∏—Å–∞—Ç—å—Å—è" in text:
        user_states[user_id] = "awaiting_name"
        await update.message.reply_text("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        return
    elif "–ø—Ä–∞–∫—Ç–∏–∫" in text:
        await update.message.reply_text(
            "üßò –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º:\n"
            "- —à–∞–º–∞–Ω—Å–∫–∏–µ —Å–µ—Å—Å–∏–∏\n- —Ç–µ–ª–µ—Å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n- –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n- —Å–Ω–æ–≤–∏–¥–µ–Ω–∏—è\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî —è –ø–æ–º–æ–≥—É —Å –≤—ã–±–æ—Ä–æ–º."
        )
        return
    elif "faq" in text or "—á–∞—Å—Ç–æ" in text:
        response = "\n\n".join([f"‚ùì {item['question']}\nüí¨ {item['answer']}" for item in FAQ_LIST])
        await update.message.reply_text(response)
        return
    elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text:
        await update.message.reply_text(
            "üìç –¶–µ–Ω—Ç—Ä ¬´–Ø—Å–Ω–æ—Å—Ç—å¬ª:\n–ú–æ—Å–∫–≤–∞, —É–ª. –¢–∏—à–∏–Ω—ã, –¥. 5\n"
            "üìû +7 999 123-45-67\nüìß yasnost@center.ru"
        )
        return
    elif "—Å–æ–≤–µ—Ç –¥—É—Ö–∞" in text:
        await update.message.reply_text("üîÆ –°–µ–π—á–∞—Å –æ–±—Ä–∞—â—É—Å—å –∫ –¥—É—Ö—É...")
        await send_ai_reply(update, system_prompt=PROMPT, user_prompt="–î–∞–π –æ–±—Ä–∞–∑–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –∏–¥—É—â–µ–≥–æ –ø–æ –ü—É—Ç–∏.")
        return
    elif "—á—Ç–æ –∑–∞ —Ü–µ–Ω—Ç—Ä" in text or "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å" in text:
        await update.message.reply_text(
            "–¶–µ–Ω—Ç—Ä ¬´–Ø—Å–Ω–æ—Å—Ç—å¬ª ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏ —Å —Å–æ–±–æ–π. "
            "–ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç —Å —Ç–µ–ª–æ–º, —É—Å–ø–æ–∫–æ–∏—Ç—å —É–º –∏ –Ω–∞–π—Ç–∏ –æ–ø–æ—Ä—É. "
            "–†–∞–±–æ—Ç–∞–µ–º —á–µ—Ä–µ–∑ –¥—ã—Ö–∞–Ω–∏–µ, —Å–Ω–æ–≤–∏–¥–µ–Ω–∏—è, —Ç–µ–ª–µ—Å–Ω–æ—Å—Ç—å –∏ –æ–±—Ä–∞–∑—ã. "
            "–ï—Å–ª–∏ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî —è –ø–æ–¥—Å–∫–∞–∂—É –ø—É—Ç—å."
        )
        return

    # –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ AI
    await send_ai_reply(update, system_prompt=PROMPT, user_prompt=msg)

async def send_ai_reply(update, system_prompt, user_prompt):
    completion = client.chat.completions.create(
        model="deepseek-chat",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ]
    )
    await update.message.reply_text(completion.choices[0].message.content)